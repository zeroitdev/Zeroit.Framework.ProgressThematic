// ***********************************************************************
// Assembly         : Zeroit.Framework.ProgressThematic
// Author           : ZEROIT
// Created          : 11-22-2018
//
// Last Modified By : ZEROIT
// Last Modified On : 12-12-2018
// ***********************************************************************
// <copyright file="PeaceAnimatorWithEditor - StartFast.cs" company="Zeroit Dev Technologies">
//     Copyright © Zeroit Dev Technologies  2017. All Rights Reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using System.Linq;
using System.Windows.Forms;
using Zeroit.Framework.ProgressThematic.AnimationHelpers.WinFormAnimation;

namespace Zeroit.Framework.ProgressThematic.AnimationHelpers.PeaceAnimator_WinformAnimation
{
    public class StartFastAnimation
    {
        public static void StartFast(
            Zeroit.Framework.ProgressThematic.AnimationHelpers.WinFormAnimation.animationMode animationMode, 
            Control control,
            Zeroit.Framework.ProgressThematic.AnimationHelpers.WinFormAnimation.PeaceAnimatorWithEditor peaceanimatorWithEditor,
            Zeroit.Framework.ProgressThematic.AnimationHelpers.AnimationEditors.PeaceInput peaceInput,
            Zeroit.Framework.ProgressThematic.AnimationHelpers.WinFormAnimation.Animator _animator,
            Zeroit.Framework.ProgressThematic.AnimationHelpers.WinFormAnimation.Animator2D _animator2D,
            Zeroit.Framework.ProgressThematic.AnimationHelpers.WinFormAnimation.Animator3D _animator3D)
        {
            switch (peaceInput.AnimationMode)
            {
                case animationMode.OneD:

                    #region Old Code
                    //_animator.Paths = new Path(path1_start, path1_end, path1_duration).ToArray();


                    //switch (easingFunctionStart)
                    //{
                    //    case KnownAnimationFunctions.None:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.BounceEaseOut:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.BounceEaseOut).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.BounceEaseIn:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.BounceEaseIn).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.BounceEaseInOut:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.BounceEaseInOut).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.BounceEaseOutIn:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.BounceEaseOutIn).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.CubicEaseIn:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.CubicEaseIn).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.CubicEaseInOut:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.CubicEaseInOut).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.CubicEaseOut:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.CubicEaseOut).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.Liner:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.Liner).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.CircularEaseInOut:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.CircularEaseInOut).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.CircularEaseIn:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.CircularEaseIn).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.CircularEaseOut:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.CircularEaseOut).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.QuadraticEaseIn:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.QuadraticEaseOut).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.QuadraticEaseOut:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.QuadraticEaseOut).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.QuadraticEaseInOut:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.QuadraticEaseInOut).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.QuarticEaseIn:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.QuarticEaseIn).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.QuarticEaseOut:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.QuarticEaseOut).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.QuarticEaseInOut:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.QuarticEaseInOut).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.QuinticEaseInOut:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.QuinticEaseInOut).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.QuinticEaseIn:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.QuinticEaseIn).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.QuinticEaseOut:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.QuinticEaseOut).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.SinusoidalEaseIn:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.SinusoidalEaseIn).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.SinusoidalEaseOut:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.SinusoidalEaseOut).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.SinusoidalEaseInOut:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.SinusoidalEaseInOut).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.ExponentialEaseIn:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.ExponentialEaseIn).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.ExponentialEaseOut:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.ExponentialEaseOut).ToArray();
                    //        break;
                    //    case KnownAnimationFunctions.ExponentialEaseInOut:
                    //        _animator.Paths = new Path(path1_start, path1_end, path1_duration, AnimationFunctions.ExponentialEaseInOut).ToArray();
                    //        break;
                    //    default:
                    //        break;
                    //} 
                    #endregion

                    switch (peaceInput.oneDProperty)
                    {
                        case Animator.KnownProperties.Value:

                            switch (peaceInput.oneD_path_easingFunction)
                            {
                                case KnownAnimationFunctions.None:
                                    break;
                                case KnownAnimationFunctions.BounceEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseOutIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CubicEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CubicEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CubicEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.Liner:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.Liner).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CircularEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CircularEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CircularEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuadraticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuadraticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuadraticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuarticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuarticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuarticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuinticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuinticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuinticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.SinusoidalEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.SinusoidalEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.SinusoidalEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ExponentialEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ExponentialEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;

                                case KnownAnimationFunctions.ExponentialEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;


                                #region Later Additions
                                case KnownAnimationFunctions.LinearTween:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.LinearTween).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInQuad:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInQuad).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutQuad:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutQuad).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutQuad:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutQuad).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInCubic:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInCubic).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutCubic:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutCubic).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutCubic:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutCubic).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInQuart:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInQuart).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutQuart:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutQuart).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutQuart:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutQuart).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInQuint:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInQuint).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutQuint:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutQuint).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutQuint:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutQuint).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInSine:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInSine).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutSine:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutSine).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutSine:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutSine).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInExpo:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInExpo).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutExpo:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutExpo).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutExpo:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutExpo).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInCirc:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInCirc).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutCirc:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutCirc).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutCirc:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutCirc).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ElasticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ElasticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ElasticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ElasticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ElasticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ElasticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ElasticEaseOutIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ElasticEaseOutIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseOutV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseInV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseInOutV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInOutV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseOutInV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutInV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BackEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BackEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BackEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BackEaseOutIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseOutIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                #endregion


                                default:
                                    break;
                            }

                            peaceInput._animator.Play(peaceInput.Control, Animator.KnownProperties.Value);

                            #region Old Code

                            //peaceInput._animator = new Animator(new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, path1_delay,AnimationFunctions.BounceEaseInOut));

                            //peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration).ToArray();

                            #endregion

                            break;

                        #region Old Code on Text, Caption, BackColor, ForeColor
                        //case Animator.KnownProperties.Text:

                        //    switch (peaceInput.oneD_path_easingFunction)
                        //    {
                        //        case KnownAnimationFunctions.None:
                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseOutIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CubicEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CubicEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CubicEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.Liner:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.Liner).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CircularEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CircularEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CircularEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuadraticEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuadraticEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuadraticEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuarticEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuarticEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuarticEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuinticEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuinticEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuinticEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.SinusoidalEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.SinusoidalEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.SinusoidalEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.ExponentialEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.ExponentialEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.ExponentialEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        default:
                        //            break;
                        //    }


                        //    peaceInput._animator.Play(peaceInput.Control, Animator.KnownProperties.Text);

                        //    #region Old Code
                        //    //peaceInput._animator = new Animator(new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, path1_delay));

                        //    //peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration).ToArray();

                        //    #endregion

                        //    break;
                        //case Animator.KnownProperties.Caption:

                        //    switch (peaceInput.oneD_path_easingFunction)
                        //    {
                        //        case KnownAnimationFunctions.None:
                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseOutIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CubicEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CubicEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CubicEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.Liner:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.Liner).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CircularEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CircularEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CircularEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuadraticEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuadraticEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuadraticEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuarticEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuarticEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuarticEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuinticEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuinticEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuinticEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.SinusoidalEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.SinusoidalEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.SinusoidalEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.ExponentialEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.ExponentialEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.ExponentialEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        default:
                        //            break;
                        //    }


                        //    peaceInput._animator.Play(peaceInput.Control, Animator.KnownProperties.Caption);

                        //    #region Old Code
                        //    //peaceInput._animator = new Animator(new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, path1_delay));

                        //    //peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration).ToArray();

                        //    #endregion

                        //    break;
                        //case Animator.KnownProperties.BackColor:

                        //    switch (peaceInput.oneD_path_easingFunction)
                        //    {
                        //        case KnownAnimationFunctions.None:
                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOut).ToArray();
                        //            //peaceInput._animator.Paths = new Path((float)peaceInput.peaceInput.startColor.A, (float)peaceInput.peaceInput.endColor.B, peaceInput.path1_duration).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOut).ToArray();
                        //            //peaceInput._animator.Paths = new Path((float)peaceInput.peaceInput.startColor.A, (float)peaceInput.peaceInput.endColor.B, peaceInput.path1_duration).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOut).ToArray();
                        //            //peaceInput._animator.Paths = new Path((float)peaceInput.peaceInput.startColor.A, (float)peaceInput.peaceInput.endColor.B, peaceInput.path1_duration).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseOutIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOut).ToArray();
                        //            //peaceInput._animator.Paths = new Path((float)peaceInput.peaceInput.startColor.A, (float)peaceInput.peaceInput.endColor.B, peaceInput.path1_duration).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CubicEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CubicEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CubicEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.Liner:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.Liner).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CircularEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CircularEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CircularEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuadraticEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuadraticEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuadraticEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuarticEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuarticEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuarticEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuinticEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuinticEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuinticEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.SinusoidalEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.SinusoidalEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.SinusoidalEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.ExponentialEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.ExponentialEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.ExponentialEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        default:
                        //            break;
                        //    }


                        //    //peaceInput._animator.Play(new SafeInvoker<Color>(SetsColor, this), "BackColor", new SafeInvoker(End, peaceInput.Control));

                        //    peaceInput._animator.Play(peaceInput.Control, Animator.KnownProperties.BackColor);

                        //    #region Old Code
                        //    //peaceInput._animator = new Animator(new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, path1_delay, AnimationFunctions.QuarticEaseInOut));
                        //    //peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration).ToArray();

                        //    //peaceInput._animator.Play(peaceInput.Control, Animator.KnownProperties.BackColor);

                        //    //SafeInvoker<Color> safeColor = new SafeInvoker<Color>(new Action<Color>(SetsColor), peaceInput.Control);
                        //    //var prop = peaceInput.Control.GetType().GetProperty("BackColor",
                        //    //BindingFlags.IgnoreCase | BindingFlags.Static | BindingFlags.Public | BindingFlags.Instance |
                        //    //BindingFlags.SetProperty);

                        //    //peaceInput._animator.Play(new SafeInvoker<Color>(
                        //    //value => prop.SetValue(peaceInput.Control, Convert.ChangeType(value, prop.PropertyType), null),
                        //    //peaceInput.Control), safeColor.ToString());
                        //    //

                        //    //peaceInput._animator.Play(peaceInput.Control, Animator.KnownProperties.BackColor, safeColor);

                        //    #endregion

                        //    break;
                        //case Animator.KnownProperties.ForeColor:

                        //    switch (peaceInput.oneD_path_easingFunction)
                        //    {
                        //        case KnownAnimationFunctions.None:
                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseOutIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CubicEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CubicEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CubicEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.Liner:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.Liner).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CircularEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CircularEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CircularEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuadraticEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuadraticEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuadraticEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuarticEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuarticEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuarticEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuinticEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuinticEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuinticEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.SinusoidalEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.SinusoidalEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.SinusoidalEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.ExponentialEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.ExponentialEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.ExponentialEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        default:
                        //            break;
                        //    }


                        //    peaceInput._animator.Play(peaceInput.Control, Animator.KnownProperties.ForeColor);

                        //    #region Old Code
                        //    //peaceInput._animator = new Animator(new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, path1_delay));

                        //    //peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration).ToArray();

                        //    #endregion

                        //    break; 
                        #endregion

                        case Animator.KnownProperties.Opacity:

                            switch (peaceInput.oneD_path_easingFunction)
                            {
                                case KnownAnimationFunctions.None:
                                    break;
                                case KnownAnimationFunctions.BounceEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseOutIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CubicEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CubicEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CubicEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.Liner:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.Liner).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CircularEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CircularEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CircularEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuadraticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuadraticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuadraticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuarticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuarticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuarticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuinticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuinticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuinticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.SinusoidalEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.SinusoidalEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.SinusoidalEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ExponentialEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ExponentialEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ExponentialEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;


                                #region Later Additions 
                                case KnownAnimationFunctions.LinearTween:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.LinearTween).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;

                                case KnownAnimationFunctions.EaseInQuad:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInQuad).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutQuad:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutQuad).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutQuad:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutQuad).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInCubic:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInCubic).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutCubic:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutCubic).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutCubic:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutCubic).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInQuart:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInQuart).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutQuart:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutQuart).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutQuart:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutQuart).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInQuint:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInQuint).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutQuint:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutQuint).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutQuint:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutQuint).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInSine:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInSine).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutSine:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutSine).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutSine:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutSine).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInExpo:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInExpo).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutExpo:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutExpo).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutExpo:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutExpo).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInCirc:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInCirc).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutCirc:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutCirc).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutCirc:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutCirc).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ElasticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ElasticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ElasticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ElasticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ElasticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ElasticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ElasticEaseOutIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ElasticEaseOutIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseOutV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseInV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseInOutV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInOutV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseOutInV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutInV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BackEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BackEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;

                                case KnownAnimationFunctions.BackEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;

                                case KnownAnimationFunctions.BackEaseOutIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseOutIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                #endregion

                                default:
                                    break;
                            }


                            peaceInput._animator.Play(peaceInput.Control, Animator.KnownProperties.Opacity);

                            #region Old Code
                            //peaceInput._animator = new Animator(new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, path1_delay));

                            //peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration).ToArray();

                            #endregion

                            break;

                        case Animator.KnownProperties.Custom:

                            switch (peaceInput.oneD_path_easingFunction)
                            {
                                case KnownAnimationFunctions.None:
                                    break;
                                case KnownAnimationFunctions.BounceEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseOutIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CubicEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CubicEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CubicEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.Liner:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.Liner).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CircularEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CircularEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CircularEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuadraticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuadraticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuadraticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuarticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuarticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuarticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuinticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuinticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuinticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.SinusoidalEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.SinusoidalEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.SinusoidalEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ExponentialEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ExponentialEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ExponentialEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;

                                #region Later Additions

                                case KnownAnimationFunctions.LinearTween:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.LinearTween).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInQuad:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInQuad).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutQuad:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutQuad).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutQuad:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutQuad).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInCubic:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInCubic).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutCubic:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutCubic).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutCubic:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutCubic).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInQuart:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInQuart).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutQuart:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutQuart).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutQuart:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutQuart).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInQuint:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInQuint).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutQuint:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutQuint).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutQuint:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutQuint).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInSine:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInSine).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutSine:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutSine).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutSine:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutSine).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInExpo:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInExpo).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutExpo:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutExpo).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutExpo:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutExpo).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInCirc:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInCirc).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutCirc:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutCirc).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutCirc:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutCirc).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ElasticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ElasticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ElasticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ElasticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ElasticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ElasticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseOutV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseInV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseInOutV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInOutV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseOutInV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutInV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BackEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BackEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BackEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BackEaseOutIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseOutIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;


                                #endregion



                                default:
                                    break;
                            }


                            peaceInput._animator.Play(peaceInput.Control, peaceInput.propertyName);

                            #region Testing Code
                            //PropertyInfo propinfo = peaceInput.Control.GetType().GetProperty(peaceInput.propertyName, BindingFlags.GetProperty);

                            //var propvalue = propinfo.GetValue(propinfo);

                            //if (propvalue.GetType() == typeof(Int32))
                            //{
                            //    peaceInput._animator = new Animator(new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, path1_delay));

                            //}
                            #endregion

                            #region Old Code
                            //peaceInput._animator.Paths.Last().Reverse();

                            //peaceInput._animator.Play(peaceInput.Control, peaceInput.propertyName, new SafeInvoker(AutoStop));

                            //peaceInput._animator = new Animator(new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, path1_delay));

                            #endregion

                            break;

                        case Animator.KnownProperties.Width:

                            switch (peaceInput.oneD_path_easingFunction)
                            {
                                case KnownAnimationFunctions.None:
                                    break;
                                case KnownAnimationFunctions.BounceEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseOutIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CubicEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CubicEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CubicEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.Liner:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.Liner).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CircularEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CircularEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CircularEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuadraticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuadraticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuadraticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuarticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuarticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuarticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuinticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuinticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuinticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.SinusoidalEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.SinusoidalEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.SinusoidalEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ExponentialEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ExponentialEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ExponentialEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;

                                #region Later Additions

                                case KnownAnimationFunctions.LinearTween:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.LinearTween).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInQuad:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInQuad).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutQuad:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutQuad).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutQuad:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutQuad).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInCubic:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInCubic).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutCubic:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutCubic).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutCubic:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutCubic).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInQuart:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInQuart).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutQuart:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutQuart).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutQuart:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutQuart).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInQuint:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInQuint).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutQuint:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutQuint).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutQuint:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutQuint).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInSine:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInSine).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutSine:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutSine).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutSine:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutSine).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInExpo:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInExpo).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutExpo:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutExpo).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutExpo:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutExpo).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInCirc:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInCirc).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutCirc:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutCirc).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutCirc:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutCirc).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ElasticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ElasticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ElasticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ElasticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ElasticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ElasticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseOutV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseInV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseInOutV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInOutV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseOutInV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutInV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BackEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BackEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BackEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BackEaseOutIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseOutIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;


                                #endregion

                                default:
                                    break;
                            }

                            peaceInput._animator.Play(peaceInput.Control, "Width");

                            #region Old Code
                            //peaceInput._animator = new Animator(new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, path1_delay));

                            //peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration).ToArray();

                            #endregion

                            break;

                        case Animator.KnownProperties.Height:

                            switch (peaceInput.oneD_path_easingFunction)
                            {
                                case KnownAnimationFunctions.None:
                                    break;
                                case KnownAnimationFunctions.BounceEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseOutIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CubicEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CubicEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CubicEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.Liner:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.Liner).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CircularEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CircularEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.CircularEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuadraticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuadraticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuadraticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuarticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuarticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuarticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuinticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuinticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.QuinticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.SinusoidalEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.SinusoidalEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.SinusoidalEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ExponentialEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ExponentialEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ExponentialEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;

                                #region Later Additions

                                case KnownAnimationFunctions.LinearTween:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.LinearTween).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInQuad:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInQuad).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutQuad:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutQuad).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutQuad:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutQuad).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInCubic:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInCubic).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutCubic:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutCubic).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutCubic:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutCubic).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInQuart:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInQuart).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutQuart:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutQuart).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutQuart:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutQuart).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInQuint:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInQuint).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutQuint:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutQuint).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutQuint:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutQuint).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInSine:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInSine).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutSine:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutSine).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutSine:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutSine).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInExpo:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInExpo).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutExpo:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutExpo).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutExpo:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutExpo).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInCirc:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInCirc).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseOutCirc:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseOutCirc).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.EaseInOutCirc:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.EaseInOutCirc).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ElasticEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ElasticEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ElasticEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ElasticEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.ElasticEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ElasticEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseOutV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseInV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseInOutV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInOutV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BounceEaseOutInV2:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutInV2).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BackEaseOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BackEaseIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BackEaseInOut:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseInOut).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;
                                case KnownAnimationFunctions.BackEaseOutIn:
                                    peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BackEaseOutIn).ToArray();
                                    peaceInput._animator.Paths.Last().Reverse();

                                    break;


                                #endregion

                                default:
                                    break;
                            }

                            peaceInput._animator.Play(peaceInput.Control, "Height");

                            #region Old Code
                            //peaceInput._animator = new Animator(new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, path1_delay));

                            //peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration).ToArray();

                            #endregion

                            break;

                        #region Old Code
                        //case Animator.KnownProperties.Horizontal:

                        //    switch (peaceInput.oneD_path_easingFunction)
                        //    {
                        //        case KnownAnimationFunctions.None:
                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseOutIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CubicEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CubicEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CubicEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.Liner:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.Liner).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CircularEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CircularEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CircularEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuadraticEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuadraticEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuadraticEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuarticEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuarticEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuarticEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuinticEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuinticEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuinticEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.SinusoidalEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.SinusoidalEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.SinusoidalEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.ExponentialEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.ExponentialEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.ExponentialEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        default:
                        //            break;
                        //    }


                        //    peaceInput._animator.Play(peaceInput.Control, "Point.X");

                        //    #region Old Code
                        //    //peaceInput._animator = new Animator(new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, path1_delay));

                        //    //peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration).ToArray();

                        //    #endregion

                        //    break;

                        //case Animator.KnownProperties.Vertical:

                        //    switch (peaceInput.oneD_path_easingFunction)
                        //    {
                        //        case KnownAnimationFunctions.None:
                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.BounceEaseOutIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.BounceEaseOutIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CubicEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CubicEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CubicEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CubicEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.Liner:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.Liner).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CircularEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CircularEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.CircularEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.CircularEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuadraticEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuadraticEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuadraticEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuadraticEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuarticEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuarticEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuarticEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuarticEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuinticEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuinticEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.QuinticEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.QuinticEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.SinusoidalEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.SinusoidalEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.SinusoidalEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.SinusoidalEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.ExponentialEaseIn:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseIn).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.ExponentialEaseOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        case KnownAnimationFunctions.ExponentialEaseInOut:
                        //            peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, AnimationFunctions.ExponentialEaseInOut).ToArray();
                        //            peaceInput._animator.Paths.Last().Reverse();

                        //            break;
                        //        default:
                        //            break;
                        //    }


                        //    peaceInput._animator.Play(peaceInput.Control, "Point.Y");

                        //    #region Old Code
                        //    //peaceInput._animator = new Animator(new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration, path1_delay));

                        //    //peaceInput._animator.Paths = new Path(peaceInput.path1_start, peaceInput.path1_end, peaceInput.path1_duration).ToArray();

                        //    #endregion

                        //    break; 
                        #endregion

                        default:
                            break;
                    }

                    break;

                case animationMode.TwoD:

                    if (peaceInput.twoDContinue)
                    {
                        switch (peaceInput.path_easingFunction)
                        {

                            case KnownAnimationFunctions.None:
                                break;
                            case KnownAnimationFunctions.BounceEaseOut:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.BounceEaseIn:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.BounceEaseInOut:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.BounceEaseOutIn:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.CubicEaseIn:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }


                                break;
                            case KnownAnimationFunctions.CubicEaseInOut:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }


                                break;
                            case KnownAnimationFunctions.CubicEaseOut:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }


                                break;
                            case KnownAnimationFunctions.Liner:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }


                                break;
                            case KnownAnimationFunctions.CircularEaseInOut:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.CircularEaseIn:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.CircularEaseOut:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.QuadraticEaseIn:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.QuadraticEaseOut:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.QuadraticEaseInOut:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.QuarticEaseIn:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.QuarticEaseOut:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.QuarticEaseInOut:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.QuinticEaseInOut:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.QuinticEaseIn:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.QuinticEaseOut:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.SinusoidalEaseIn:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }


                                break;
                            case KnownAnimationFunctions.SinusoidalEaseOut:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }


                                break;
                            case KnownAnimationFunctions.SinusoidalEaseInOut:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }


                                break;
                            case KnownAnimationFunctions.ExponentialEaseIn:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }


                                break;
                            case KnownAnimationFunctions.ExponentialEaseOut:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }


                                break;
                            case KnownAnimationFunctions.ExponentialEaseInOut:
                                _animator2D.Paths = new Path2D(
                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                .ContinueTo(new Path2D(
                                    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseOutIn)));

                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.BounceEaseOutIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.BounceEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CubicEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CubicEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.Liner),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.CircularEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.CircularEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuadraticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuarticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuarticEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.QuinticEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.QuinticEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.SinusoidalEaseOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseIn),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseInOut)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseIn)));

                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        _animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                        .ContinueTo(new Path2D(
                                            new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                                            new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.ExponentialEaseOut)));

                                        break;
                                    default:
                                        break;
                                }


                                break;
                            default:
                                break;


                        }

                    }


                    #region Replaced Else


                    else
                    {
                        switch (peaceInput.path_easingFunction)
                        {

                            case KnownAnimationFunctions.None:
                                break;
                            case KnownAnimationFunctions.BounceEaseOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;



                                    #region Later Additions
                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;

                                    #endregion


                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.BounceEaseIn:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions
                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOut))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.BounceEaseInOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;

                                    #region Later Additions
                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutIn))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.BounceEaseOutIn:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;

                                    #region Later Additions
                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.CubicEaseIn:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions
                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseInOut))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }


                                break;
                            case KnownAnimationFunctions.CubicEaseInOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseOut))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }


                                break;
                            case KnownAnimationFunctions.CubicEaseOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CubicEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CubicEaseIn))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }


                                break;
                            case KnownAnimationFunctions.Liner:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.Liner),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.Liner))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }


                                break;
                            case KnownAnimationFunctions.CircularEaseInOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseIn))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.CircularEaseIn:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseOut))
                                            .ToArray();




                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.CircularEaseOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.CircularEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.CircularEaseInOut))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.QuadraticEaseIn:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseOut))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.QuadraticEaseOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseInOut))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.QuadraticEaseInOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuadraticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuadraticEaseIn))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.QuarticEaseIn:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseOut))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.QuarticEaseOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseInOut))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.QuarticEaseInOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuarticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuarticEaseIn))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.QuinticEaseInOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseIn))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.QuinticEaseIn:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseOut))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.QuinticEaseOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.QuinticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.QuinticEaseInOut))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;
                            case KnownAnimationFunctions.SinusoidalEaseIn:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseInOut))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }


                                break;
                            case KnownAnimationFunctions.SinusoidalEaseOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseIn))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }


                                break;
                            case KnownAnimationFunctions.SinusoidalEaseInOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.SinusoidalEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.SinusoidalEaseOut))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }


                                break;
                            case KnownAnimationFunctions.ExponentialEaseIn:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseInOut))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }


                                break;
                            case KnownAnimationFunctions.ExponentialEaseOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }


                                break;
                            case KnownAnimationFunctions.ExponentialEaseInOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseIn))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ExponentialEaseOut))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.LinearTween:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.LinearTween),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.LinearTween))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseInQuad:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuad))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseOutQuad:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseInOutQuad:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuad),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuad))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseInCubic:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCubic))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseOutCubic:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseInOutCubic:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCubic),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCubic))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseInQuart:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuart))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseOutQuart:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseInOutQuart:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuart),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuart))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseInQuint:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseOutQuint:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseInOutQuint:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutQuint))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutQuint),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInQuint))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseInSine:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutSine))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseOutSine:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseInOutSine:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutSine),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInSine))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseInExpo:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutExpo))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseOutExpo:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseInOutExpo:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutExpo),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInExpo))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseInCirc:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseOutCirc))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseOutCirc:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.EaseInOutCirc:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.EaseInOutCirc),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.EaseInCirc))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.ElasticEaseOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseIn))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.ElasticEaseIn:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOut))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.ElasticEaseInOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseOutIn))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.ElasticEaseOutIn:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.ElasticEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.ElasticEaseInOut))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.BounceEaseOutV2:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInV2))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.BounceEaseInV2:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutV2))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.BounceEaseInOutV2:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseInOutV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseOutInV2))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.BounceEaseOutInV2:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();

                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BounceEaseOutInV2),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseInOutV2))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.BackEaseOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseIn))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.BackEaseIn:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOut))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.BackEaseInOut:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseInOut),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseOutIn))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            case KnownAnimationFunctions.BackEaseOutIn:
                                peaceInput._animator2D.Paths = new Path2D(
                                        new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                        new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                    .ToArray();



                                switch (peaceInput.continued_path_easingFunction)
                                {
                                    case KnownAnimationFunctions.None:
                                        break;
                                    case KnownAnimationFunctions.BounceEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();


                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CubicEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.Liner:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.CircularEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuadraticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuarticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.QuinticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.SinusoidalEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ExponentialEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;

                                    #region Later Additions

                                    case KnownAnimationFunctions.LinearTween:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuad:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCubic:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuart:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutQuint:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutSine:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutExpo:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.EaseInOutCirc:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.ElasticEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseInOutV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BounceEaseOutInV2:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseInOut:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;
                                    case KnownAnimationFunctions.BackEaseOutIn:
                                        peaceInput._animator2D.Paths = new Path2D(
                                                new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1, AnimationFunctions.BackEaseOutIn),

                                                new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BackEaseInOut))
                                            .ToArray();



                                        break;

                                    #endregion

                                    default:
                                        break;
                                }

                                break;

                            default:
                                break;


                        }
                    }

                    #endregion


                    #region Old Code
                    //_animator2D.Paths = new Path2D(
                    //new Path(peaceInput.path2D_start_1, peaceInput.path2D_end_1, peaceInput.path2D_duration_1, peaceInput.path2D_delay_1 , AnimationFunctions.BounceEaseInOut),

                    //new Path(peaceInput.path2D_start_2, peaceInput.path2D_end_2, peaceInput.path2D_duration_2, peaceInput.path2D_delay_2, AnimationFunctions.BounceEaseIn))
                    //.ContinueTo(new Path2D(
                    //    new Path(peaceInput.continued_path2D_start_1, peaceInput.continued_path2D_end_1, peaceInput.continued_path2D_duration_1, peaceInput.continued_path2D_delay_1, AnimationFunctions.ExponentialEaseInOut),
                    //    new Path(peaceInput.continued_path2D_start_2, peaceInput.continued_path2D_end_2, peaceInput.continued_path2D_duration_2, peaceInput.continued_path2D_delay_2, AnimationFunctions.Liner)));

                    #endregion

                    switch (peaceInput.twoDProperty)
                    {
                        case Animator2D.KnownProperties.Size:
                            _animator2D.Play(control, Animator2D.KnownProperties.Size);
                            break;
                        case Animator2D.KnownProperties.Location:
                            _animator2D.Play(control, Animator2D.KnownProperties.Location);
                            break;
                        default:
                            break;
                    }

                    break;
                case animationMode.ThreeD:

                    peaceInput._animator3D.Stop();

                    switch (peaceInput.threeD_path_easingFunction)
                    {
                        case KnownAnimationFunctions.None:
                            break;
                        case KnownAnimationFunctions.BounceEaseOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.BounceEaseOut).ToArray();
                            break;
                        case KnownAnimationFunctions.BounceEaseIn:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.BounceEaseIn).ToArray();

                            break;
                        case KnownAnimationFunctions.BounceEaseInOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.BounceEaseInOut).ToArray();

                            break;
                        case KnownAnimationFunctions.BounceEaseOutIn:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.BounceEaseOutIn).ToArray();

                            break;
                        case KnownAnimationFunctions.CubicEaseIn:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.CubicEaseIn).ToArray();

                            break;
                        case KnownAnimationFunctions.CubicEaseInOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.CubicEaseInOut).ToArray();

                            break;
                        case KnownAnimationFunctions.CubicEaseOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.CubicEaseOut).ToArray();

                            break;
                        case KnownAnimationFunctions.Liner:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.Liner).ToArray();

                            break;
                        case KnownAnimationFunctions.CircularEaseInOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.CircularEaseInOut).ToArray();

                            break;
                        case KnownAnimationFunctions.CircularEaseIn:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.CircularEaseIn).ToArray();

                            break;
                        case KnownAnimationFunctions.CircularEaseOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.CircularEaseOut).ToArray();

                            break;
                        case KnownAnimationFunctions.QuadraticEaseIn:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.QuadraticEaseIn).ToArray();

                            break;
                        case KnownAnimationFunctions.QuadraticEaseOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.QuadraticEaseOut).ToArray();

                            break;
                        case KnownAnimationFunctions.QuadraticEaseInOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.QuadraticEaseInOut).ToArray();

                            break;
                        case KnownAnimationFunctions.QuarticEaseIn:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.QuarticEaseIn).ToArray();

                            break;
                        case KnownAnimationFunctions.QuarticEaseOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.QuarticEaseOut).ToArray();

                            break;
                        case KnownAnimationFunctions.QuarticEaseInOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.QuarticEaseInOut).ToArray();

                            break;
                        case KnownAnimationFunctions.QuinticEaseInOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.QuinticEaseInOut).ToArray();

                            break;
                        case KnownAnimationFunctions.QuinticEaseIn:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.QuinticEaseIn).ToArray();

                            break;
                        case KnownAnimationFunctions.QuinticEaseOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.QuinticEaseOut).ToArray();

                            break;
                        case KnownAnimationFunctions.SinusoidalEaseIn:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.SinusoidalEaseIn).ToArray();

                            break;
                        case KnownAnimationFunctions.SinusoidalEaseOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.SinusoidalEaseOut).ToArray();

                            break;
                        case KnownAnimationFunctions.SinusoidalEaseInOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.SinusoidalEaseInOut).ToArray();

                            break;
                        case KnownAnimationFunctions.ExponentialEaseIn:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.ExponentialEaseIn).ToArray();

                            break;
                        case KnownAnimationFunctions.ExponentialEaseOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.ExponentialEaseOut).ToArray();

                            break;
                        case KnownAnimationFunctions.ExponentialEaseInOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.ExponentialEaseInOut).ToArray();

                            break;
                        case KnownAnimationFunctions.LinearTween:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.LinearTween).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseInQuad:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseInQuad).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseOutQuad:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseOutQuad).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseInOutQuad:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseInOutQuad).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseInCubic:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseInCubic).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseOutCubic:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseOutCubic).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseInOutCubic:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseInOutCubic).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseInQuart:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseInQuart).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseOutQuart:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseOutQuart).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseInOutQuart:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseInOutQuart).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseInQuint:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseInQuint).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseOutQuint:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseOutQuint).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseInOutQuint:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseInOutQuint).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseInSine:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseInSine).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseOutSine:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseOutSine).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseInOutSine:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseInOutSine).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseInExpo:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseInExpo).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseOutExpo:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseOutExpo).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseInOutExpo:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseInOutExpo).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseInCirc:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseInCirc).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseOutCirc:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseOutCirc).ToArray();

                            break;
                        case KnownAnimationFunctions.EaseInOutCirc:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.EaseInOutCirc).ToArray();

                            break;
                        case KnownAnimationFunctions.ElasticEaseOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.ElasticEaseOut).ToArray();

                            break;
                        case KnownAnimationFunctions.ElasticEaseIn:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.ElasticEaseIn).ToArray();

                            break;
                        case KnownAnimationFunctions.ElasticEaseInOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.ElasticEaseInOut).ToArray();

                            break;
                        case KnownAnimationFunctions.ElasticEaseOutIn:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.ElasticEaseOutIn).ToArray();

                            break;
                        case KnownAnimationFunctions.BounceEaseOutV2:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.BounceEaseOutV2).ToArray();

                            break;
                        case KnownAnimationFunctions.BounceEaseInV2:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.BounceEaseInV2).ToArray();

                            break;
                        case KnownAnimationFunctions.BounceEaseInOutV2:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.BounceEaseInOutV2).ToArray();

                            break;
                        case KnownAnimationFunctions.BounceEaseOutInV2:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.BounceEaseOutInV2).ToArray();

                            break;
                        case KnownAnimationFunctions.BackEaseOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.BackEaseOut).ToArray();

                            break;
                        case KnownAnimationFunctions.BackEaseIn:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.BackEaseIn).ToArray();

                            break;
                        case KnownAnimationFunctions.BackEaseInOut:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.BackEaseInOut).ToArray();

                            break;
                        case KnownAnimationFunctions.BackEaseOutIn:
                            peaceInput._animator3D.Paths =
                                new Path3D(peaceInput.startColor.ToFloat3D(), peaceInput.endColor.ToFloat3D(), peaceInput.path3_duration, peaceInput.path3_delay, AnimationFunctions.BackEaseOutIn).ToArray();

                            break;

                        default:
                            break;
                    }


                    switch (peaceInput.threeDProperty)
                    {
                        case Animator3D.KnownProperties.BackColor:
                            peaceInput._animator3D.Play(peaceInput.Control, Animator3D.KnownProperties.BackColor, new SafeInvoker(() =>
                            {
                                peaceInput._animator3D.Paths = peaceInput._animator3D.Paths.Last().Reverse().ToArray();
                                peaceInput._animator3D.Play(peaceInput.Control, Animator3D.KnownProperties.BackColor);
                            }));
                            break;
                        case Animator3D.KnownProperties.ForeColor:
                            peaceInput._animator3D.Play(peaceInput.Control, Animator3D.KnownProperties.ForeColor, new SafeInvoker(() =>
                            {
                                peaceInput._animator3D.Paths = peaceInput._animator3D.Paths.Last().Reverse().ToArray();
                                peaceInput._animator3D.Play(peaceInput.Control, Animator3D.KnownProperties.ForeColor);
                            }));
                            break;

                        case Animator3D.KnownProperties.Custom:
                            peaceInput._animator3D.Play(peaceInput.Control, peaceInput.colorPropertyName, new SafeInvoker(() =>
                            {
                                peaceInput._animator3D.Paths = peaceInput._animator3D.Paths.Last().Reverse().ToArray();
                                peaceInput._animator3D.Play(peaceInput.Control, peaceInput.colorPropertyName);
                            }));
                            break;

                        default:
                            break;
                    }

                    break;
                //case animationMode.Other:
                //    break;
                default:
                    break;
            }

        }
    }
    

}
